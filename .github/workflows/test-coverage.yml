name: Coverage Check

on:
  push:
    branches:
      - develop
      - feature/add_lcov_action
  pull_request:
    branches: [ "develop" ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Install gcc 14
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install -y gcc-14 g++-14
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 60
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 60
          sudo ln -s /usr/bin/gcov-14 /usr/local/bin/gcov-14

      - name: Install required Perl modules
        run: |
          sudo apt-get install -y cpanminus
          sudo cpanm Capture::Tiny
          sudo cpanm Capture::Tiny DateTime

      - name: Install lcov 2.3.1
        run: |
          git clone https://github.com/linux-test-project/lcov.git
          cd lcov
          git checkout v2.3.1
          sudo make install
          cd ..
          rm -rf lcov
      
      - name: Check gcc and gcov versions
        run: |
          gcc-14 --version
          gcov-14 --version
          lcov --version

      - name: Set symbolic links to use gcc-14 and gcov-14
        run: |
          sudo rm -f /usr/bin/gcc
          sudo rm -f /usr/bin/g++
          sudo ln -s /usr/bin/gcc-14 /usr/bin/gcc
          sudo ln -s /usr/bin/g++-14 /usr/bin/g++
          sudo rm -f /usr/local/bin/gcov
          sudo ln -s /usr/bin/gcov-14 /usr/local/bin/gcov

      - name: Run lcov
        run: |
          make full-cov CC=gcc-14 GCOV=gcov-14

      - name: Enforce 80% minimum coverage across all metrics
        run: |
          # Extract all percentage values from coverPer* classes
          coverage_values=$(grep -oP '<td class="coverPer(?:Hi|Med|Lo)">\K[0-9.]+' cov/full_report/src/index.html)

          failed=0

          echo "Checking individual coverage entries..."
          while read -r value; do
            echo "Found coverage: $value%"
            if (( $(echo "$value < 58.5" | bc -l) )); then
              echo "❌ Coverage $value% is below the 80% threshold"
              failed=1
            fi
          done <<< "$coverage_values"

          if [ $failed -eq 1 ]; then
            echo "💥 Coverage check failed: at least one metric is below 80%"
            exit 1
          else
            echo "✅ All coverage values are at or above 80%"
          fi
